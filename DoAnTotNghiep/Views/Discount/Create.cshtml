@model DiscountVM
@{
    ViewData["Title"] = "View";
    Layout = null;
}
<link href="~/lib/multi.js/multi.min.css" rel="stylesheet" />
@using (Html.BeginForm("Create", "Discount", FormMethod.Post, new { id = "frmCreateDiscount" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="panel-body p-4 bg-light">
        <h3 class="h3_title-sigin text-center">Danh mục khóa học</h3>
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-12 pb-3">
                        <div class="pb-3">Mã khuyến mãi (<span style="color:red">*</span>)</div>
                        @if (string.IsNullOrEmpty(Model.CodeDiscount))
                        {
                            <textarea cols="20" class="form-control" rows="2" asp-for="CodeDiscount" placeholder="Mã khuyến mãi"></textarea>
                        }
                        else
                        {
                            <input type="hidden" asp-for="CodeDiscount" />
                            <textarea dis cols="20" readonly class="form-control" rows="2" asp-for="CodeDiscount" placeholder="Mã khuyến mãi"></textarea>
                        }
                        @Html.ValidationMessageFor(m => m.CodeDiscount)
                    </div>
                    <div class="col-md-6 pb-3">
                        <div class="pb-3">Từ ngày (<span style="color:red">*</span>)</div>
                        <input asp-for="FromDate" class="form-control" />
                        @Html.ValidationMessageFor(m => m.FromDate)
                    </div>
                    <div class="col-md-6 pb-3">
                        <div class="pb-3">Đến ngày (<span style="color:red">*</span>)</div>
                        <input asp-for="ToDate" class="form-control" />
                        @Html.ValidationMessageFor(m => m.ToDate)
                    </div>

                    <div class="col-md-12 pb-3" id="radioDiscount">
                        <div class="pb-3">Loại chiết khấu</div>
                        @if (Model.DiscountPercent > 0)
                        {
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="CheckTypeDiscount" asp-for="CheckTypeDiscount" value="0" checked="checked" />
                                <label class="form-check-label" for="percent">
                                    <span style="margin-left:20px">Phần trăm chiết khấu</span>
                                </label>
                            </div>
                        }
                        else if (Model.DiscountAmount > 0)
                        {
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="CheckTypeDiscount" asp-for="CheckTypeDiscount" value="1" checked="checked" />
                                <label class="form-check-label" for="amount">
                                    <span style="margin-left:20px">Số tiền chiết khấu</span>
                                </label>
                            </div>
                        }
                        else
                        {
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="CheckTypeDiscount" asp-for="CheckTypeDiscount" value="0" />
                                <label class="form-check-label" for="percent">
                                    <span style="margin-left:20px">Phần trăm chiết khấu</span>
                                </label>
                            </div>
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="CheckTypeDiscount" asp-for="CheckTypeDiscount" value="1"  checked="checked" />
                                <label class="form-check-label" for="amount">
                                    <span style="margin-left:20px">Số tiền chiết khấu</span>
                                </label>
                            </div>
                        }
                        @Html.ValidationMessageFor(m => m.CheckTypeDiscount)
                    </div>
                    <div class="col-md-12 pb-3" id="DivInputDiscount">
                        <div class="pb-3">Chiết khấu (<span style="color:red">*</span>)</div>
                        @if (Model.DiscountPercent > 0)
                        {
                            <input asp-for="DiscountPercent" min="1" max="100" type="number" class="form-control" placeholder="Nhập chiết khấu">
                        }
                        else
                        {
                            <input asp-for="DiscountAmount" min="1000" type="number" class="form-control" placeholder="Nhập chiết khấu">

                        }
                        <div class="pb-3"> <label class="error" for="DiscountAmount"></label></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix text-center">
            <button type="submit" id="btnSubmit" class="btn btn-success"><span class='fa fa-save'></span>Lưu</button>
            <button type="button" class="button btn-danger btn-popup-cancel btnCloseBanner" data-dismiss="modal"><span class='fa fa-close'></span>Huỷ</button>
        </div>
    </div>
}
<script id="inputDiscount" type="text/x-jquery-tmpl">
    <div class="pb-3">Chiết khấu (<span style="color:red">*</span>)</div>
    <input id="{{ID}}" min="{{Min}}" max="{{Max}}" name="{{ID}}" type="number" class="form-control" placeholder="Nhập chiết khấu" />
    <span id="priceFormat"></span>
</script>
<script id="tableDiscount" type="text/x-jquery-tmpl">
    <option value="{{ID}}">{{Name}}</option>
</script>
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script>
    jQuery.validator.addMethod("greaterThan",
        function (value, element, params) {

            if (!/Invalid|NaN/.test(new Date(value))) {
                return new Date(value) > new Date($(params).val());
            }

            return isNaN(value) && isNaN($(params).val())
                || (Number(value) > Number($(params).val()));
        }, 'Phải lớn hơn ngày bắt đầu.');
    $('#frmCreateDiscount').validate({
        rules: {
            CodeDiscount: {
                required: true,
                maxlength: 50
            },
            FromDate: {
                required: true,
                date: true,

            },
            ToDate: {
                required: true,
                date: true,
                greaterThan: "#FromDate"
            }
        },
        messages: {
            CodeDiscount: {
                required: "Vui lòng không để trống",
                maxlength: "Không được dài quá 70 kí tự",
            },
            FromDate: {
                required: "Vui lòng không để trống",
                date: "Ngày sai định dạng"
            },
            ToDate: {
                required: "Vui lòng không để trống",
                date: "Ngày sai định dạng"
            },
            DiscountAmount: {
                min: "Vui lòng nhập lớn hơn hoặc bằng 1000"
            },
            DiscountPercent: {
                min: "Vui lòng nhập trong khoảng 1-100",
                max: "Vui lòng nhập trong khoảng 1-100"
            }
        }
    });
</script>
